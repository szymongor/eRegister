{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8090",
  "basePath": "/",
  "tags": [
    {
      "name": "authorization-controller",
      "description": "Authorization Controller"
    },
    {
      "name": "people-controller",
      "description": "People Controller"
    },
    {
      "name": "groups-controller",
      "description": "Groups Controller"
    },
    {
      "name": "lessons-controller",
      "description": "Lessons Controller"
    },
    {
      "name": "ereg-user-controller",
      "description": "Ereg User Controller"
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    }
  ],
  "paths": {
    "/EregUsers": {
      "get": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "getAllEregUsers",
        "operationId": "getAllEregUsersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "insertEregUser",
        "operationId": "insertEregUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "eregUser",
            "description": "eregUser",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EregUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/EregUsers/enables": {
      "get": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "getAllEnableEregUsers",
        "operationId": "getAllEnableEregUsersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/EregUsers/guardians": {
      "get": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "getAllGuardiansEregUsers",
        "operationId": "getAllGuardiansEregUsersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/EregUsers/id={id}": {
      "get": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "getEregUserById",
        "operationId": "getEregUserByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "removeEregUserById",
        "operationId": "removeEregUserByIdUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/EregUsers/login={login}": {
      "get": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "getEregUserByLogin",
        "operationId": "getEregUserByLoginUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "removeEregUserByLogin",
        "operationId": "removeEregUserByLoginUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/EregUsers/newPassword": {
      "post": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "updatePasswordEregUser",
        "operationId": "updatePasswordEregUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "newPasswordRequest",
            "description": "newPasswordRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewPasswordRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/EregUsers/person/id={id}": {
      "get": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "getEregUserByIdPerson",
        "operationId": "getEregUserByIdPersonUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/EregUsers/students": {
      "get": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "getAllStudentsEregUsers",
        "operationId": "getAllStudentsEregUsersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/EregUsers/teachers": {
      "get": {
        "tags": [
          "ereg-user-controller"
        ],
        "summary": "getAllTeachersEregUsers",
        "operationId": "getAllTeachersEregUsersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Groups/teachBy/id={idTeacher}": {
      "get": {
        "tags": [
          "groups-controller"
        ],
        "summary": "getAllGroupsByTeacher",
        "operationId": "getAllGroupsByTeacherUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idTeacher",
            "in": "path",
            "description": "idTeacher",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Lessons": {
      "get": {
        "tags": [
          "lessons-controller"
        ],
        "summary": "getAllLessons",
        "operationId": "getAllLessonsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "lessons-controller"
        ],
        "summary": "insertLesson",
        "operationId": "insertLessonUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "lesson",
            "description": "lesson",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lesson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Lessons/about/id={idSubject}": {
      "get": {
        "tags": [
          "lessons-controller"
        ],
        "summary": "getLessonsAboutSubject",
        "operationId": "getLessonsAboutSubjectUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idSubject",
            "in": "path",
            "description": "idSubject",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Lessons/attendingGroup/id={idGroup}": {
      "get": {
        "tags": [
          "lessons-controller"
        ],
        "summary": "getLessonsByAttendingGroup",
        "operationId": "getLessonsByAttendingGroupUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idGroup",
            "in": "path",
            "description": "idGroup",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Lessons/id={id}": {
      "get": {
        "tags": [
          "lessons-controller"
        ],
        "summary": "getLessonById",
        "operationId": "getLessonByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "lessons-controller"
        ],
        "summary": "removeLessonById",
        "operationId": "removeLessonByIdUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/Lessons/leadBy/id={idTeacher}": {
      "get": {
        "tags": [
          "lessons-controller"
        ],
        "summary": "getLessonsLeadsByTeacher",
        "operationId": "getLessonsLeadsByTeacherUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idTeacher",
            "in": "path",
            "description": "idTeacher",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Lessons/updateSemester": {
      "post": {
        "tags": [
          "lessons-controller"
        ],
        "summary": "updateSemester",
        "operationId": "updateSemesterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateSemesterRequest",
            "description": "updateSemesterRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSemesterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Lessons/updateTeacher": {
      "post": {
        "tags": [
          "lessons-controller"
        ],
        "summary": "updateTeacher",
        "operationId": "updateTeacherUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateTeacherRequest",
            "description": "updateTeacherRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTeacherRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/People": {
      "get": {
        "tags": [
          "people-controller"
        ],
        "summary": "getAllPeople",
        "operationId": "getAllPeopleUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/People/Address/id={idAddress}": {
      "get": {
        "tags": [
          "people-controller"
        ],
        "summary": "getAddressById",
        "operationId": "getAddressByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idAddress",
            "in": "path",
            "description": "idAddress",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "people-controller"
        ],
        "summary": "removeAddressById",
        "operationId": "removeAddressByIdUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idAddress",
            "in": "path",
            "description": "idAddress",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/People/Child/id={idPerson}": {
      "get": {
        "tags": [
          "people-controller"
        ],
        "summary": "getAllChild",
        "operationId": "getAllChildUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idPerson",
            "in": "path",
            "description": "idPerson",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/People/Person/id={idPerson}": {
      "get": {
        "tags": [
          "people-controller"
        ],
        "summary": "getPersonById",
        "operationId": "getPersonByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idPerson",
            "in": "path",
            "description": "idPerson",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "people-controller"
        ],
        "summary": "removePersonById",
        "operationId": "removePersonByIdUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idPerson",
            "in": "path",
            "description": "idPerson",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/People/newAddress": {
      "post": {
        "tags": [
          "people-controller"
        ],
        "summary": "insertAddress",
        "operationId": "insertAddressUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "address",
            "description": "address",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/People/newPerson": {
      "post": {
        "tags": [
          "people-controller"
        ],
        "summary": "insertPerson",
        "operationId": "insertPersonUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "person",
            "description": "person",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/People/newPersonWithAddress": {
      "post": {
        "tags": [
          "people-controller"
        ],
        "summary": "insertPersonWithAddress",
        "operationId": "insertPersonWithAddressUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "insertPersonWithAddress",
            "description": "insertPersonWithAddress",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsertPersonWithAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/People/updateAddress": {
      "post": {
        "tags": [
          "people-controller"
        ],
        "summary": "updateAddress",
        "operationId": "updateAddressUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateAddressRequest",
            "description": "updateAddressRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/People/updateExpirationDate": {
      "post": {
        "tags": [
          "people-controller"
        ],
        "summary": "updateExpirationDate",
        "operationId": "updateExpirationDateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateExpirationDateRequest",
            "description": "updateExpirationDateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExpirationDateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/People/updateIdAddress": {
      "post": {
        "tags": [
          "people-controller"
        ],
        "summary": "updateIdAddress",
        "operationId": "updateIdAddressUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateIdAddressRequest",
            "description": "updateIdAddressRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateIdAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/People/updateMail": {
      "post": {
        "tags": [
          "people-controller"
        ],
        "summary": "updateMail",
        "operationId": "updateMailUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateMailRequest",
            "description": "updateMailRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/People/updatePhone": {
      "post": {
        "tags": [
          "people-controller"
        ],
        "summary": "updatePhone",
        "operationId": "updatePhoneUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updatePhoneRequest",
            "description": "updatePhoneRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePhoneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth": {
      "get": {
        "tags": [
          "authorization-controller"
        ],
        "summary": "verifyToken",
        "operationId": "verifyTokenUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "jwtCredentials",
            "description": "jwtCredentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JwtCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "authorization-controller"
        ],
        "summary": "createAuthenticationToken",
        "operationId": "createAuthenticationTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "jwtCredentials",
            "description": "jwtCredentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JwtCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Serializable"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "Serializable": {
      "type": "object"
    },
    "Address": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "flatNumber": {
          "type": "integer",
          "format": "int32"
        },
        "houseNumber": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "postalCode": {
          "type": "string"
        },
        "street": {
          "type": "string"
        }
      }
    },
    "UpdateExpirationDateRequest": {
      "type": "object",
      "properties": {
        "expirationDate": {
          "type": "string"
        },
        "idPerson": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InsertPersonWithAddress": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "person": {
          "$ref": "#/definitions/Person"
        }
      }
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "100",
            "101",
            "102",
            "103",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "226",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "307",
            "308",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "426",
            "428",
            "429",
            "431",
            "451",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      }
    },
    "UpdateSemesterRequest": {
      "type": "object",
      "properties": {
        "idLesson": {
          "type": "integer",
          "format": "int32"
        },
        "semester": {
          "type": "string"
        }
      }
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      }
    },
    "Lesson": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "idGroup": {
          "type": "integer",
          "format": "int32"
        },
        "idSubject": {
          "type": "integer",
          "format": "int32"
        },
        "idTeacher": {
          "type": "integer",
          "format": "int32"
        },
        "semester": {
          "type": "string"
        },
        "subjectName": {
          "type": "string"
        },
        "teacherName": {
          "type": "string"
        },
        "teacherSurname": {
          "type": "string"
        },
        "year": {
          "type": "string"
        }
      }
    },
    "UpdateAddressRequest": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "flatNumber": {
          "type": "integer",
          "format": "int32"
        },
        "houseNumber": {
          "type": "string"
        },
        "idAddress": {
          "type": "integer",
          "format": "int32"
        },
        "postalCode": {
          "type": "string"
        },
        "street": {
          "type": "string"
        }
      }
    },
    "UpdateMailRequest": {
      "type": "object",
      "properties": {
        "idPerson": {
          "type": "integer",
          "format": "int32"
        },
        "mail": {
          "type": "string"
        }
      }
    },
    "UpdatePhoneRequest": {
      "type": "object",
      "properties": {
        "idPerson": {
          "type": "integer",
          "format": "int32"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "JwtCredentials": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "NewPasswordRequest": {
      "type": "object",
      "properties": {
        "newPassword": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        }
      }
    },
    "UpdateTeacherRequest": {
      "type": "object",
      "properties": {
        "idLesson": {
          "type": "integer",
          "format": "int32"
        },
        "idTeacher": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UpdateIdAddressRequest": {
      "type": "object",
      "properties": {
        "idPerson": {
          "type": "integer",
          "format": "int32"
        },
        "newIdAddress": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Person": {
      "type": "object",
      "properties": {
        "dateOfBirth": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "idAddress": {
          "type": "integer",
          "format": "int32"
        },
        "mail": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        }
      }
    },
    "EregUser": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "idPerson": {
          "type": "integer",
          "format": "int32"
        },
        "lastPasswordResetDate": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "roles": {
          "type": "string"
        }
      }
    }
  }
}